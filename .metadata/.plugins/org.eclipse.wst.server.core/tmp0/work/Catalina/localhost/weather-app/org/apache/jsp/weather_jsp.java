/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2024-01-20 09:46:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class weather_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	/* background: rgb(235, 150, 29); */\r\n");
      out.write("	/* background: linear-gradient(90deg, rgba(235, 150, 29, 1) 6%,\r\n");
      out.write("		rgba(253, 29, 29, 1) 49%, rgba(252, 176, 69, 1) 100%); */\r\n");
      out.write("	/* background: rgb(60,55,153); */\r\n");
      out.write("	background: linear-gradient(-120deg, yellow 5%, red 30%, #aae41e 20%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container-top {\r\n");
      out.write("	margin-top: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* Container holding the image and the text */\r\n");
      out.write(".container {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  color: white;\r\n");
      out.write("}\r\n");
      out.write("img{\r\n");
      out.write("	widht:200px;\r\n");
      out.write("	height:200px;\r\n");
      out.write("}\r\n");
      out.write("/* Bottom left text */\r\n");
      out.write(".bottom-left {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  bottom: 8px;\r\n");
      out.write("  left:250px;\r\n");
      out.write("   font-weight:800;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Top left text */\r\n");
      out.write(".top-left {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 8px;\r\n");
      out.write("   font-weight:800;\r\n");
      out.write("  left:240px;\r\n");
      out.write("  color:blue;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Top right text */\r\n");
      out.write(".top-right {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 8px;\r\n");
      out.write("   font-weight:800;\r\n");
      out.write("  right:250px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Bottom right text */\r\n");
      out.write(".bottom-right {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  bottom: 8px;\r\n");
      out.write("  right: 250px;\r\n");
      out.write("   font-weight:800;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Centered text */\r\n");
      out.write(".centered {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 100%;\r\n");
      out.write("  left: 50%;\r\n");
      out.write("  transform: translate(-50%, -50%);\r\n");
      out.write("  font-weight:800;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*form related work  */\r\n");
      out.write("\r\n");
      out.write(".controller{\r\n");
      out.write("		margin-top:20px;\r\n");
      out.write("		background-color:yellow;\r\n");
      out.write("		padding:50px 50px;\r\n");
      out.write("		opacity: 0.50;\r\n");
      out.write("		border-top-left-radius:100px;\r\n");
      out.write("	}\r\n");
      out.write("	.button-design{\r\n");
      out.write("		color:white;\r\n");
      out.write("		background-color:black;\r\n");
      out.write("		margin-top:10px;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		justify-content:end;\r\n");
      out.write("		width:50px;\r\n");
      out.write("		border-radius:10px;\r\n");
      out.write("		font-weight:600;\r\n");
      out.write("		border:none;\r\n");
      out.write("		height:30px;\r\n");
      out.write("	}\r\n");
      out.write("	.button-design:hover{\r\n");
      out.write("		background-color:green;\r\n");
      out.write("		color:red;\r\n");
      out.write("	}\r\n");
      out.write("	.text-design{\r\n");
      out.write("		border:none;\r\n");
      out.write("		width:250px;\r\n");
      out.write("	}\r\n");
      out.write("	.weather{\r\n");
      out.write("		font-family:elephant;\r\n");
      out.write("		font-weight:800;\r\n");
      out.write("		background-color:yellow;\r\n");
      out.write("		text-align:center;\r\n");
      out.write("		border-bottom:2px solid red;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<section>\r\n");
      out.write("		<div class=\"container container-top\">\r\n");
      out.write("			<div class=\"row justify-content-center\">\r\n");
      out.write("				<div class=\"col-8 text-center\">\r\n");
      out.write("					<div class=\"image-manage\">\r\n");
      out.write("							");
      out.write("\r\n");
      out.write("\r\n");
      out.write("							");

								String weatherCondition = (String)session.getAttribute("weatherCondition");
								String date = (String)(session.getAttribute("date"));
								date = date.substring(0,17);
								int temperature =(int)session.getAttribute("temperature");
								String cityName = (String)session.getAttribute("cityName");
								int humidity = (int)session.getAttribute("humidity");
								double windSpeed = (double)session.getAttribute("windSpeed");
							/* 	String weatherData = (String)session.getAttribute("weatherData"); */
								
								if(weatherCondition.equalsIgnoreCase("Clouds"))
								{
							
      out.write("\r\n");
      out.write("\r\n");
      out.write("									<div class=\"container\">\r\n");
      out.write("									  <img src=\"img/cloud.jpeg\" alt=\"Snow\">\r\n");
      out.write("									  <div class=\"bottom-left\">");
      out.print(temperature );
      out.write("&#8451;</div>\r\n");
      out.write("									  <div class=\"top-left\">");
      out.print(date );
      out.write("</div>\r\n");
      out.write("									  <div class=\"top-right\">");
      out.print(windSpeed );
      out.write("</div>\r\n");
      out.write("									  <div class=\"bottom-right\">");
      out.print(cityName );
      out.write("</div>\r\n");
      out.write("									  <div class=\"centered\">");
      out.print(weatherCondition );
      out.write("</div>\r\n");
      out.write("									</div>\r\n");
      out.write("									 <div class=\"\">");
      out.print(humidity );
      out.write("</div>\r\n");
      out.write("							");

									
								}else if(weatherCondition.equalsIgnoreCase("Clear")){
								
							
      out.write("\r\n");
      out.write("								<div class=\"container\">\r\n");
      out.write("									  <img src=\"img/clear.jpeg\" alt=\"Snow\">\r\n");
      out.write("									  <div class=\"bottom-left\">");
      out.print(temperature );
      out.write("&#8451;</div>\r\n");
      out.write("									  <div class=\"top-left\">");
      out.print(date );
      out.write("</div>\r\n");
      out.write("									  <div class=\"top-right\">");
      out.print(windSpeed );
      out.write("</div>\r\n");
      out.write("									  <div class=\"bottom-right\">");
      out.print(cityName );
      out.write("</div>\r\n");
      out.write("									  <div class=\"centered\">");
      out.print(weatherCondition );
      out.write("</div>\r\n");
      out.write("									</div>\r\n");
      out.write("									 <div class=\"\">");
      out.print(humidity );
      out.write("</div>\r\n");
      out.write("							");
		
								}else if(weatherCondition.equalsIgnoreCase("Snow")){
									
							
      out.write("\r\n");
      out.write("								<div class=\"container\">\r\n");
      out.write("									  <img src=\"img/snow.jpeg\" alt=\"Snow\">\r\n");
      out.write("									  <div class=\"bottom-left\">");
      out.print(temperature );
      out.write("&#8451;</div>\r\n");
      out.write("									  <div class=\"top-left\">");
      out.print(date );
      out.write("</div>\r\n");
      out.write("									  <div class=\"top-right\">");
      out.print(windSpeed );
      out.write("</div>\r\n");
      out.write("									  <div class=\"bottom-right\">");
      out.print(cityName );
      out.write("</div>\r\n");
      out.write("									  <div class=\"centered\">");
      out.print(weatherCondition );
      out.write("</div>\r\n");
      out.write("									</div>\r\n");
      out.write("									 <div class=\"\">");
      out.print(humidity );
      out.write("</div>\r\n");
      out.write("							");
		
								}else if(weatherCondition.equalsIgnoreCase("Haze")){
									
							
      out.write("	\r\n");
      out.write("								<div class=\"container\">\r\n");
      out.write("									  <img src=\"img/hoze.jpeg\" alt=\"Snow\">\r\n");
      out.write("									  <div class=\"bottom-left\">");
      out.print(temperature );
      out.write("&#8451;</div>\r\n");
      out.write("									  <div class=\"top-left\">");
      out.print(date );
      out.write("</div>\r\n");
      out.write("									  <div class=\"top-right\">");
      out.print(windSpeed );
      out.write("</div>\r\n");
      out.write("									  <div class=\"bottom-right\">");
      out.print(cityName );
      out.write("</div>\r\n");
      out.write("									  <div class=\"centered\">");
      out.print(weatherCondition );
      out.write("</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								<div class=\"\">");
      out.print(humidity );
      out.write("</div>\r\n");
      out.write("							");
		
								}else if(weatherCondition.equalsIgnoreCase("Smoke")
										|| weatherCondition.equalsIgnoreCase("Mist")
										|| weatherCondition.equalsIgnoreCase("Fog")
										|| weatherCondition.equalsIgnoreCase("Haze")){
							
      out.write("\r\n");
      out.write("									<div class=\"container\">\r\n");
      out.write("									  <img src=\"img/smoke.jpg\" alt=\"Snow\">\r\n");
      out.write("									  <div class=\"bottom-left\">");
      out.print(temperature );
      out.write("&#8451;</div>\r\n");
      out.write("									  <div class=\"top-left\">");
      out.print(date );
      out.write("</div>\r\n");
      out.write("									  <div class=\"top-right\">");
      out.print(windSpeed );
      out.write("</div>\r\n");
      out.write("									  <div class=\"bottom-right\">");
      out.print(cityName );
      out.write("</div>\r\n");
      out.write("									  <div class=\"centered\">");
      out.print(weatherCondition );
      out.write("</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								<div class=\"\">");
      out.print(humidity );
      out.write("</div>\r\n");
      out.write("							");
		
								}
								else{	
							
      out.write("\r\n");
      out.write("								<div class=\"container\">\r\n");
      out.write("									  <img src=\"img/rain.jpeg\" alt=\"Snow\">\r\n");
      out.write("									  <div class=\"bottom-left\">");
      out.print(temperature );
      out.write("&#8451;</div>\r\n");
      out.write("									  <div class=\"top-left\">");
      out.print(date );
      out.write("</div>\r\n");
      out.write("									  <div class=\"top-right\">");
      out.print(windSpeed );
      out.write("</div>\r\n");
      out.write("									  <div class=\"bottom-right\">");
      out.print(cityName );
      out.write("</div>\r\n");
      out.write("									  <div class=\"centered\">");
      out.print(weatherCondition );
      out.write("</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								<div class=\"\">");
      out.print(humidity );
      out.write("</div>\r\n");
      out.write("							");
		
								}
							
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("	\r\n");
      out.write("	<section class=\"form-top-header header-top mt-5\">\r\n");
      out.write("			<div class=\"container-fluid\">\r\n");
      out.write("				<div class=\"row justify-content-center\">\r\n");
      out.write("					<div class=\"col-5 form controller \">\r\n");
      out.write("						<h6 class=\"text-danger weather\">Check Weather Using City Name</h6>\r\n");
      out.write("						");

							 String message  = request.getParameter("message");
							if(!(message==null)){
						
      out.write("\r\n");
      out.write("							<h6 class=\"text-danger weather\">");
      out.print(message );
      out.write("</h6>  \r\n");
      out.write("						");
		
							 }
						
      out.write("\r\n");
      out.write("						<form action=\"FormDataController\" method=\"Post\">\r\n");
      out.write("							 <div class=\"form-design\">\r\n");
      out.write("							 	<input class=\"text-design\" type=\"text\" name=\"city_name\">\r\n");
      out.write("							 	<input class=\"button-design\" type=\"submit\" value=\"Click\">\r\n");
      out.write("							 </div>\r\n");
      out.write("						</form>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</section>\r\n");
      out.write("		\r\n");
      out.write("	<!-- <section class=\"form-header\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row justify-content-center\">\r\n");
      out.write("				<div class=\"col-6\">\r\n");
      out.write("					<form action=\"FormDataController\" method=\"Post\">\r\n");
      out.write("						<div class=\"form-controller\">\r\n");
      out.write("							<input>\r\n");
      out.write("						</div>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section> -->\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
